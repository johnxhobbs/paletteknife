% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colpal.R
\name{autopal}
\alias{autopal}
\alias{autolegend}
\title{Auto-Assign Colour Palette}
\usage{
autopal(x, set = "bright", alpha = 1, limits = NA, na_colour = NA, n = 8)

autolegend(colpal, ...)
}
\arguments{
\item{x}{Vector to be mapped to colours}

\item{set}{Colour set to use - 'bright' or 'muted' for categorical, or specify directly ('turbo', 'viridis', 'inferno')}

\item{alpha}{Transparency as a single value or as another vector (recycled to fill)}

\item{limits}{Colour scale limits as absolute range \code{c(0,10)}, or as percentile to remove outliers \code{c('0\%','99.9\%')}, or NA = all}

\item{na_colour}{Colour to represent NA, defaults to NA (do not plot)}

\item{n}{Continuous legend target size}
}
\value{
\code{colpal} Vector of colour hex strings for plotting, and can be used with \code{autolegend} which uses its attributes for legend-plotting
}
\description{
Create a ready-to-go vector of colours and pretty legend
}
\details{
Helper function for using colours in R's default \code{plot} and \code{legend}. Colours
from built-in palettes are automatically scaled to return a vector of colours
with legend information included as attributes.

A discrete palette is used for factor and character inputs whilst a
continuous palette is used for integer and numeric.

Colour sets built-in so far are:

\emph{Continuous:}

All of these continuous palettes have been forked from the \code{viridisLite} package maintained by Simon Garnier.
\itemize{
\item \code{viridis}

Perceptually uniform which allows very fair comparison between colours.
Created by Simon Garnier and released under the MIT license.
Default for \code{set = 'muted'}.
\item \code{inferno}

A red version of \code{viridis} which maps the lowest value to black, good for heatmaps.
\item \code{turbo}

An improved matlab-like 'jet' palette, useful if you want high contrast at the expense of proportionality.
Created by Anton Mikhailov, Copyright 2019 Google and released under Apache-2.0 license.
Default for \code{set = 'bright'}.
}

\emph{Discrete:}
\itemize{
\item \code{pastel}

For 12 or fewer colours, ColorBrewer Set3 is used. For more than 12,
Zeileis, Hornik and Murrell (2009): \emph{Escaping RGBland: Selecting Colors for Statistical Graphics}.
\item \code{bright}

For 12 or fewer colours, ColorBrewer Paired is used. For more than 12,
Sasha Trubetskoy  (2017): \emph{List of 20 Simple, Distinct Colors}.
}

\emph{Divergent:}
TODO

Custom limits can be specified, in two ways:
\itemize{
\item percentile limits \code{c('5\%','90\%')}: this is essential for clamping down on outliers which compress the colour scale
\item absolute limits \code{c(0,10)}: useful if multiple plots using the same range are required for cross-comparison
\item default behaviour \code{limits = NA}: adjust to exactly fit input range
}

If the colour scale does not provide enough distinction, it might be necessary to
transform the input vector, for example using \code{log(abs(x))}.
}
\examples{
autopal(LETTERS[20:30], set = 'muted', na_colour = 'grey')

autopal(as.factor(c(1:10,NA,2:9,NA,3:5)), set = 'bright')

colpal = autopal(log(mtcars$qsec), 'viridis', n = 6, alpha = 0.8)
  plot(mtcars$hp, mtcars$wt, col = colpal, cex = mtcars$cyl, pch = 16)
  autolegend(colpal, 'topleft', title = 'log(wt)', ncol = 2)
mixedbag = as.factor(sample(letters,1000,replace=T))
  #Â Here we want a summary plot ordered by level, so need to create a colour vector to match
  plot(x = mixedbag, y = rnorm(1000), col = autopal(levels(mixedbag)))
  autolegend(autopal(levels(mixedbag)), 'bottom', ncol = 9, bty = 'n')

}
